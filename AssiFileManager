import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.*;

public class AssiFileManager 
{
        // attributes 

	String fileName;
	File fileExample;
	Scanner myScanner;
	String Language;
	
	ArrayList<String> EnglishCommonWords = new ArrayList<String>(Arrays.asList("the","and","of","to","be"));
	ArrayList<String> EnglishRestrictedWords = new ArrayList<String>(Arrays.asList("the","and","that","have","been","with","had","was","for","can","are","The"));
	ArrayList<String> SpanishCommonWords = new ArrayList<String>(Arrays.asList("el","ser","que","y","haber"));
	ArrayList<String> FrenchCommonWords = new ArrayList<String>(Arrays.asList("le","la","un","et","etre"));
	// Constructor
	AssiFileManager (String fileName)
	{
		
		this.fileName = fileName;
		
	}
	
	// Method to get a connection to the file, before reading or writing 
	void connectToFile()
	{
		fileExample = new File(this.fileName);
	}

   	
	// Method to read a  file, returning a string of lines
	ArrayList<String> readFile()
	{
    
       ArrayList<String> values = new ArrayList<String>();
	    try
		{
	    	// initialise your array
	    	
	    	//get a scanner object
	    	myScanner = new Scanner(fileExample).useDelimiter("[ ,!?.]+");
	    	
	    	//use the scanner to scroll through the lines of the file
			 while (myScanner.hasNext())
	         {
			     String readWord = (myScanner.next());
			     String strippedWord = readWord.replaceAll("[^a-zA-Z\\s]", "").replaceAll("\\s+", " ");
			     if(!(strippedWord.equals(""))&&!(strippedWord.equals(" "))&&!(strippedWord.length()<3)&&!(EnglishRestrictedWords.contains(strippedWord)))
			     {
			    	 values.add(strippedWord);
			     }
			   }
		      return values;
			 
		}
		catch (FileNotFoundException e)
		{
			System.out.println("run time error " + e.getMessage());
		}

	    return values;

     }
	
	String findLang()
	{
    
       ArrayList<String> values = new ArrayList<String>();
	    try
		{
	    	// initialise your array
	    	
	    	//get a scanner object
	    	myScanner = new Scanner(fileExample).useDelimiter("[ ,!?.]+");
	    	
	    	//use the scanner to scroll through the lines of the file
			 while (myScanner.hasNext())
	         {
			     String readWord = (myScanner.next());
			     String strippedWord = readWord.replaceAll("[^a-zA-Z\\s]", "").replaceAll("\\s+", " ");
			     if(EnglishCommonWords.contains(strippedWord))
			     {
			    	 Language = "English";
			     }
			     else if(SpanishCommonWords.contains(strippedWord))
			     {
			    	 Language = "Spanish";
			     }
			     else if(FrenchCommonWords.contains(strippedWord))
			     {
			    	 Language = "French";
			     }
			   }
		      return Language;
			 
		}
		catch (FileNotFoundException e)
		{
			System.out.println("run time error " + e.getMessage());
		}

	    return Language;

     }	

    
    // Method to close a file that was read
    void closeReadFile()
    {
		 myScanner.close();
    }
}
